 (function() { 'use strict'; let isLivewireReady = false; let pendingCallbacks = []; function checkLivewireReady() { return window.Livewire && ( window.Livewire.isLivewireRequest !== undefined || window.Livewire.all !== undefined || document.querySelector('[wire\\:id]') ); } function setupEventListeners() { document.addEventListener('livewire:navigating', handleNavigating); document.addEventListener('livewire:navigated', handleNavigated); document.addEventListener('livewire:load', handleLivewireLoad); document.addEventListener('livewire:update', handleLivewireUpdate); document.addEventListener('livewire:initialized', handleLivewireLoad); document.addEventListener('livewire:component-updated', handleLivewireUpdate); } function handleNavigating() { const progressBar = document.getElementById('progress-bar'); const loadingOverlay = document.getElementById('loading-overlay'); if (progressBar) { progressBar.style.width = '30%'; progressBar.style.opacity = '1'; } if (loadingOverlay) { loadingOverlay.classList.remove('hidden'); } document.body.classList.add('livewire-navigating'); } function handleNavigated() { const progressBar = document.getElementById('progress-bar'); const loadingOverlay = document.getElementById('loading-overlay'); if (progressBar) { progressBar.style.width = '100%'; } setTimeout(() => { if (progressBar) { progressBar.style.width = '0%'; progressBar.style.opacity = '0'; } if (loadingOverlay) { loadingOverlay.classList.add('hidden'); } document.body.classList.remove('livewire-navigating'); reinitializeComponents(); }, 200); } function handleLivewireLoad() { isLivewireReady = true; pendingCallbacks.forEach(callback => { try { callback(); } catch (e) { console.warn('Pending callback failed:', e); } }); pendingCallbacks = []; reinitializeComponents(); } function handleLivewireUpdate() { setTimeout(reinitializeComponents, 100); } function reinitializeComponents() { initializeLazyImages(); initializeSwiper(); if (window.Alpine && typeof window.Alpine.initTree === 'function') { window.Alpine.initTree(document.body); } window.dispatchEvent(new CustomEvent('components:reinitialize')); } function initializeLazyImages() { const lazyImages = document.querySelectorAll('img[data-src]:not(.loaded)'); if ('IntersectionObserver' in window && lazyImages.length > 0) { const imageObserver = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { const img = entry.target; img.style.transition = 'opacity 0.3s ease-in-out'; img.style.opacity = '0'; img.src = img.dataset.src; img.onload = () => { img.style.opacity = '1'; img.classList.add('loaded'); img.removeAttribute('data-src'); }; imageObserver.unobserve(img); } }); }, { rootMargin: '50px' }); lazyImages.forEach(img => imageObserver.observe(img)); } else { lazyImages.forEach(img => { img.src = img.dataset.src; img.classList.add('loaded'); img.removeAttribute('data-src'); }); } } function initializeSwiper() { if (typeof Swiper === 'undefined') return; document.querySelectorAll('.swiper:not(.swiper-initialized)').forEach(function(swiperEl) { const slides = swiperEl.querySelectorAll('.swiper-slide'); if (slides.length === 0) return; try { new Swiper(swiperEl, { loop: slides.length > 1, slidesPerView: 1, spaceBetween: 20, autoplay: slides.length > 1 ? { delay: 4000, disableOnInteraction: false } : false, pagination: { el: swiperEl.querySelector('.swiper-pagination'), clickable: true }, navigation: { nextEl: swiperEl.querySelector('.swiper-button-next'), prevEl: swiperEl.querySelector('.swiper-button-prev') }, breakpoints: { 1024: { slidesPerView: 3 } } }); } catch (e) { console.warn('Swiper initialization failed:', e); } }); } function whenLivewireReady(callback) { if (isLivewireReady || checkLivewireReady()) { callback(); } else { pendingCallbacks.push(callback); } } window.LivewireCompat = { whenReady: whenLivewireReady, reinitialize: reinitializeComponents, isReady: () => isLivewireReady }; document.addEventListener('DOMContentLoaded', function() { setupEventListeners(); if (checkLivewireReady()) { handleLivewireLoad(); } setTimeout(() => { if (!isLivewireReady && checkLivewireReady()) { handleLivewireLoad(); } }, 1000); initializeLazyImages(); initializeSwiper(); }); })(); 